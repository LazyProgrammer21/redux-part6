{"ast":null,"code":"var _jsxFileName = \"/home/lazy/Desktop/Redux-Part6/redux-note/src/components/Newnote.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { createNote } from \"../reducers/noteReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Newnote = props => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const addNote = event => {\n    event.preventDefault();\n    const content = event.target.note.value;\n\n    if (content === \"\") {\n      alert(\"Notes cannot be Empty\");\n    } else {\n      event.target.note.value = \"\";\n      dispatch(createNote(content));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Newnote, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Newnote;\nexport default Newnote;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newnote\");","map":{"version":3,"names":["useDispatch","createNote","Newnote","props","dispatch","addNote","event","preventDefault","content","target","note","value","alert"],"sources":["/home/lazy/Desktop/Redux-Part6/redux-note/src/components/Newnote.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { createNote } from \"../reducers/noteReducer\";\n\nconst Newnote = (props) => {\n  const dispatch = useDispatch();\n\n  const addNote = (event) => {\n    event.preventDefault();\n\n    const content = event.target.note.value;\n    if (content === \"\") {\n      alert(\"Notes cannot be Empty\");\n    } else {\n      event.target.note.value = \"\";\n      dispatch(createNote(content));\n    }\n  };\n  return (\n    <>\n      <form onSubmit={addNote}>\n        <input name=\"note\" />\n        <button type=\"submit\">add</button>\n      </form>\n    </>\n  );\n};\n\nexport default Newnote;\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,yBAA3B;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;EAEA,MAAMK,OAAO,GAAIC,KAAD,IAAW;IACzBA,KAAK,CAACC,cAAN;IAEA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkBC,KAAlC;;IACA,IAAIH,OAAO,KAAK,EAAhB,EAAoB;MAClBI,KAAK,CAAC,uBAAD,CAAL;IACD,CAFD,MAEO;MACLN,KAAK,CAACG,MAAN,CAAaC,IAAb,CAAkBC,KAAlB,GAA0B,EAA1B;MACAP,QAAQ,CAACH,UAAU,CAACO,OAAD,CAAX,CAAR;IACD;EACF,CAVD;;EAWA,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEH,OAAhB;MAAA,wBACE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAQD,CAtBD;;GAAMH,O;UACaF,W;;;KADbE,O;AAwBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}