{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\nconst generateId = () => Number((Math.random() * 1000000).toFixed(0));\n\nconst noteSlice = createSlice({\n  name: \"notes\",\n  initialState: [],\n  reducers: {\n    createNote(state, action) {\n      const content = action.payload;\n      state.push({\n        content,\n        important: false,\n        id: generateId()\n      });\n    },\n\n    toggleImportanceOf(state, action) {\n      const id = action.payload;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = { ...noteToChange,\n        important: !noteToChange.important\n      };\n      return state.map(note => note.id !== id ? note : changedNote);\n    },\n\n    appendNote(state, action) {\n      state.push(action.payload);\n    },\n\n    setNotes(state, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  createNote,\n  toggleImportanceOf,\n  appendNote,\n  setNotes\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createSlice","generateId","Number","Math","random","toFixed","noteSlice","name","initialState","reducers","createNote","state","action","content","payload","push","important","id","toggleImportanceOf","noteToChange","find","n","changedNote","map","note","appendNote","setNotes","actions","reducer"],"sources":["/home/lazy/Desktop/Redux-Part6/redux-note/src/reducers/noteReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst generateId = () => Number((Math.random() * 1000000).toFixed(0));\nconst noteSlice = createSlice({\n  name: \"notes\",\n  initialState: [],\n  reducers: {\n    createNote(state, action) {\n      const content = action.payload;\n      state.push({\n        content,\n        important: false,\n        id: generateId(),\n      });\n    },\n    toggleImportanceOf(state, action) {\n      const id = action.payload;\n      const noteToChange = state.find((n) => n.id === id);\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important,\n      };\n      return state.map((note) => (note.id !== id ? note : changedNote));\n    },\n    appendNote(state, action) {\n      state.push(action.payload);\n    },\n    setNotes(state, action) {\n      return action.payload;\n    },\n  },\n});\nexport const { createNote, toggleImportanceOf, appendNote, setNotes } =\n  noteSlice.actions;\nexport default noteSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAMC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAL,KAAgB,OAAjB,EAA0BC,OAA1B,CAAkC,CAAlC,CAAD,CAA/B;;AACA,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,OADsB;EAE5BC,YAAY,EAAE,EAFc;EAG5BC,QAAQ,EAAE;IACRC,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACxB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACAH,KAAK,CAACI,IAAN,CAAW;QACTF,OADS;QAETG,SAAS,EAAE,KAFF;QAGTC,EAAE,EAAEhB,UAAU;MAHL,CAAX;IAKD,CARO;;IASRiB,kBAAkB,CAACP,KAAD,EAAQC,MAAR,EAAgB;MAChC,MAAMK,EAAE,GAAGL,MAAM,CAACE,OAAlB;MACA,MAAMK,YAAY,GAAGR,KAAK,CAACS,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACJ,EAAF,KAASA,EAA3B,CAArB;MACA,MAAMK,WAAW,GAAG,EAClB,GAAGH,YADe;QAElBH,SAAS,EAAE,CAACG,YAAY,CAACH;MAFP,CAApB;MAIA,OAAOL,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACP,EAAL,KAAYA,EAAZ,GAAiBO,IAAjB,GAAwBF,WAA7C,CAAP;IACD,CAjBO;;IAkBRG,UAAU,CAACd,KAAD,EAAQC,MAAR,EAAgB;MACxBD,KAAK,CAACI,IAAN,CAAWH,MAAM,CAACE,OAAlB;IACD,CApBO;;IAqBRY,QAAQ,CAACf,KAAD,EAAQC,MAAR,EAAgB;MACtB,OAAOA,MAAM,CAACE,OAAd;IACD;;EAvBO;AAHkB,CAAD,CAA7B;AA6BA,OAAO,MAAM;EAAEJ,UAAF;EAAcQ,kBAAd;EAAkCO,UAAlC;EAA8CC;AAA9C,IACXpB,SAAS,CAACqB,OADL;AAEP,eAAerB,SAAS,CAACsB,OAAzB"},"metadata":{},"sourceType":"module"}