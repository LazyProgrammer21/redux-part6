{"ast":null,"code":"var _jsxFileName = \"/home/lazy/Desktop/Redux-Part6/redux-note/src/index.js\";\nimport { createStore } from \"redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst store = createStore(noteReducer);\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"the app state is in redux store\",\n    important: true,\n    id: 1\n  }\n});\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"state changes are made with actions\",\n    important: false,\n    id: 2\n  }\n});\n\nconst App = () => {\n  const addNote = event => {\n    event.preventDefault();\n    const content = event.target.note.value;\n\n    if (content === \"\") {\n      alert(\"Notes cannot be Empty\");\n    } else {\n      store.dispatch(createNote(content));\n    }\n  };\n\n  const toggleImportance = id => {\n    store.dispatch(toggleImportanceOf(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: store.getState().map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => toggleImportance(note.id),\n        children: [note.content, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: note.important ? \"important\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 28\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst renderApp = () => {\n  ReactDOM.createRoot(document.getElementById(\"root\")).render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 63\n  }, this));\n};\n\nrenderApp();\nstore.subscribe(renderApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createStore","React","ReactDOM","store","noteReducer","dispatch","type","data","content","important","id","App","addNote","event","preventDefault","target","note","value","alert","createNote","toggleImportance","toggleImportanceOf","getState","map","renderApp","createRoot","document","getElementById","render","subscribe"],"sources":["/home/lazy/Desktop/Redux-Part6/redux-note/src/index.js"],"sourcesContent":["import { createStore } from \"redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nconst store = createStore(noteReducer);\n\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"the app state is in redux store\",\n    important: true,\n    id: 1,\n  },\n});\n\nstore.dispatch({\n  type: \"NEW_NOTE\",\n  data: {\n    content: \"state changes are made with actions\",\n    important: false,\n    id: 2,\n  },\n});\n\nconst App = () => {\n  const addNote = (event) => {\n    event.preventDefault();\n\n    const content = event.target.note.value;\n    if (content === \"\") {\n      alert(\"Notes cannot be Empty\");\n    } else {\n      store.dispatch(createNote(content));\n    }\n  };\n  const toggleImportance = (id) => {\n    store.dispatch(toggleImportanceOf(id));\n  };\n  return (\n    <div>\n      <form onSubmit={addNote}>\n        <input name=\"note\" />\n        <button type=\"submit\">add</button>\n      </form>\n      <ul>\n        {store.getState().map((note) => (\n          <li key={note.id} onClick={() => toggleImportance(note.id)}>\n            {note.content} <strong>{note.important ? \"important\" : \"\"}</strong>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst renderApp = () => {\n  ReactDOM.createRoot(document.getElementById(\"root\")).render(<App />);\n};\nrenderApp();\nstore.subscribe(renderApp);\n"],"mappings":";AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,KAAK,GAAGH,WAAW,CAACI,WAAD,CAAzB;AAEAD,KAAK,CAACE,QAAN,CAAe;EACbC,IAAI,EAAE,UADO;EAEbC,IAAI,EAAE;IACJC,OAAO,EAAE,iCADL;IAEJC,SAAS,EAAE,IAFP;IAGJC,EAAE,EAAE;EAHA;AAFO,CAAf;AASAP,KAAK,CAACE,QAAN,CAAe;EACbC,IAAI,EAAE,UADO;EAEbC,IAAI,EAAE;IACJC,OAAO,EAAE,qCADL;IAEJC,SAAS,EAAE,KAFP;IAGJC,EAAE,EAAE;EAHA;AAFO,CAAf;;AASA,MAAMC,GAAG,GAAG,MAAM;EAChB,MAAMC,OAAO,GAAIC,KAAD,IAAW;IACzBA,KAAK,CAACC,cAAN;IAEA,MAAMN,OAAO,GAAGK,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,KAAlC;;IACA,IAAIT,OAAO,KAAK,EAAhB,EAAoB;MAClBU,KAAK,CAAC,uBAAD,CAAL;IACD,CAFD,MAEO;MACLf,KAAK,CAACE,QAAN,CAAec,UAAU,CAACX,OAAD,CAAzB;IACD;EACF,CATD;;EAUA,MAAMY,gBAAgB,GAAIV,EAAD,IAAQ;IAC/BP,KAAK,CAACE,QAAN,CAAegB,kBAAkB,CAACX,EAAD,CAAjC;EACD,CAFD;;EAGA,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEE,OAAhB;MAAA,wBACE;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAA,UACGT,KAAK,CAACmB,QAAN,GAAiBC,GAAjB,CAAsBP,IAAD,iBACpB;QAAkB,OAAO,EAAE,MAAMI,gBAAgB,CAACJ,IAAI,CAACN,EAAN,CAAjD;QAAA,WACGM,IAAI,CAACR,OADR,oBACiB;UAAA,UAASQ,IAAI,CAACP,SAAL,GAAiB,WAAjB,GAA+B;QAAxC;UAAA;UAAA;UAAA;QAAA,QADjB;MAAA,GAASO,IAAI,CAACN,EAAd;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CA7BD;;KAAMC,G;;AA+BN,MAAMa,SAAS,GAAG,MAAM;EACtBtB,QAAQ,CAACuB,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,EAAqDC,MAArD,eAA4D,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA,QAA5D;AACD,CAFD;;AAGAJ,SAAS;AACTrB,KAAK,CAAC0B,SAAN,CAAgBL,SAAhB"},"metadata":{},"sourceType":"module"}