{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  content: \"reducer defines how redux store works\",\n  important: true,\n  id: 1\n}, {\n  content: \"state of store can contain any data\",\n  important: false,\n  id: 2\n}];\n\nconst generateId = () => Number((Math.random() * 1000000).toFixed(0));\n\nconst noteSlice = createSlice({\n  name: \"notes\",\n  initialState,\n  reducers: {\n    createNote(state, action) {\n      const content = action.payload;\n      state.push({\n        content,\n        important: false,\n        id: generateId()\n      });\n    },\n\n    toggleImportanceOf(state, action) {\n      const id = action.payload;\n      const noteToChange = state.find(n => n.id === id);\n      const changedNote = { ...noteToChange,\n        important: !noteToChange.important\n      };\n      return state.map(note => note.id !== id ? note : changedNote);\n    }\n\n  }\n});\nexport const {\n  createNote,\n  toggleImportanceOf\n} = noteSlice.actions;\nexport default noteSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","content","important","id","generateId","Number","Math","random","toFixed","noteSlice","name","reducers","createNote","state","action","payload","push","toggleImportanceOf","noteToChange","find","n","changedNote","map","note","actions","reducer"],"sources":["/home/lazy/Desktop/Redux-Part6/redux-note/src/reducers/noteReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    content: \"reducer defines how redux store works\",\n    important: true,\n    id: 1,\n  },\n  {\n    content: \"state of store can contain any data\",\n    important: false,\n    id: 2,\n  },\n];\n\nconst generateId = () => Number((Math.random() * 1000000).toFixed(0));\nconst noteSlice = createSlice({\n  name: \"notes\",\n  initialState,\n  reducers: {\n    createNote(state, action) {\n      const content = action.payload;\n      state.push({\n        content,\n        important: false,\n        id: generateId(),\n      });\n    },\n    toggleImportanceOf(state, action) {\n      const id = action.payload;\n      const noteToChange = state.find((n) => n.id === id);\n      const changedNote = {\n        ...noteToChange,\n        important: !noteToChange.important,\n      };\n      return state.map((note) => (note.id !== id ? note : changedNote));\n    },\n  },\n});\nexport const { createNote, toggleImportanceOf } = noteSlice.actions;\nexport default noteSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,OAAO,EAAE,uCADX;EAEEC,SAAS,EAAE,IAFb;EAGEC,EAAE,EAAE;AAHN,CADmB,EAMnB;EACEF,OAAO,EAAE,qCADX;EAEEC,SAAS,EAAE,KAFb;EAGEC,EAAE,EAAE;AAHN,CANmB,CAArB;;AAaA,MAAMC,UAAU,GAAG,MAAMC,MAAM,CAAC,CAACC,IAAI,CAACC,MAAL,KAAgB,OAAjB,EAA0BC,OAA1B,CAAkC,CAAlC,CAAD,CAA/B;;AACA,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,OADsB;EAE5BV,YAF4B;EAG5BW,QAAQ,EAAE;IACRC,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACxB,MAAMb,OAAO,GAAGa,MAAM,CAACC,OAAvB;MACAF,KAAK,CAACG,IAAN,CAAW;QACTf,OADS;QAETC,SAAS,EAAE,KAFF;QAGTC,EAAE,EAAEC,UAAU;MAHL,CAAX;IAKD,CARO;;IASRa,kBAAkB,CAACJ,KAAD,EAAQC,MAAR,EAAgB;MAChC,MAAMX,EAAE,GAAGW,MAAM,CAACC,OAAlB;MACA,MAAMG,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACjB,EAAF,KAASA,EAA3B,CAArB;MACA,MAAMkB,WAAW,GAAG,EAClB,GAAGH,YADe;QAElBhB,SAAS,EAAE,CAACgB,YAAY,CAAChB;MAFP,CAApB;MAIA,OAAOW,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACpB,EAAL,KAAYA,EAAZ,GAAiBoB,IAAjB,GAAwBF,WAA7C,CAAP;IACD;;EAjBO;AAHkB,CAAD,CAA7B;AAuBA,OAAO,MAAM;EAAET,UAAF;EAAcK;AAAd,IAAqCR,SAAS,CAACe,OAArD;AACP,eAAef,SAAS,CAACgB,OAAzB"},"metadata":{},"sourceType":"module"}